name: seminar-hw-pipeline

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

# Build and push Docker images
jobs:
    build-and-push-image:
        runs-on: ubuntu-latest

        permissions:
            contents: read
            packages: write
        
        steps:
            - 
                name: Checkout repository
                uses: actions/checkout@v3
            
            -
                name: Log in to the Container registry
                uses: docker/login-action@v1
                with:
                    registry: ${{ env.REGISTRY }}
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}

            -
                name: Extract metadata for Docker
                id: meta
                uses: docker/metadata-action@v3
                with:
                    images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            
            -
                name: Build and push Docker image - Client
                uses: docker/build-push-action@v2
                with:
                    context: ./client
                    push: true
                    tags: ${{ steps.meta.outputs.tags }}
                    labels: ${{ steps.meta.outputs.labels }}
            
            -
                name: Build and push Docker image - Server
                uses: docker/build-push-action@v2
                with:
                    context: ./server
                    push: true
                    tags: ${{ steps.meta.outputs.tags }}
                    labels: ${{ steps.meta.outputs.labels }}
        
    deploy-to:
        name: Deploy to

        runs-on: ubuntu-latest
        
        needs: build-and-push-image

        permissions:
            contents: read
            packages: write
        
        steps:
            -
                name: SSH Remote Commands
                uses: appleboy/ssh-action@master
                with:
                    host: ${{ secrets.HOST }}
                    username: ${{ secrets.USERNAME }}
                    key: ${{ secrets.KEY }}
                    port: ${{ secrets.PORT }}
                    timeout: 120s
                    script: |
                        cd 2023-winter-wheel-assignment
                        git pull origin main
                        docker compose up -d
